<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" 
   	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/task 
           http://www.springframework.org/schema/task/spring-task-3.0.xsd
           http://www.springframework.org/schema/data/jpa
     	   http://www.springframework.org/schema/data/jpa/spring-jpa.xsd" default-lazy-init="true">
           
    <context:annotation-config />  
    <context:component-scan base-package="com.feng" annotation-config="true" />
    
    <import resource="./spring-jpa.xml"/>
    
   <bean id="jedisClient" class="com.feng.util.redis.JedisClientImpl"/>
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy">
    	<constructor-arg name="poolConfig" ref="jedisPoolConfig" />
        <constructor-arg name="host" value="${redis_host}" />    
        <constructor-arg name="port" value="${redis_port}" />
        <constructor-arg name="timeout" value="${redis_timeout}"/>
    	<constructor-arg name= "password" value="${redis_password}"/>
    </bean>
    
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
	    <property name="maxTotal" value="1000"/> <!-- 控制一个pool可分配多少个jedis实例   -->  
	    <property name="maxIdle" value="200" />   <!-- 控制一个pool最多有多少个状态为idle(空闲)的jedis实例 -->  
	    <property name="maxWaitMillis" value="2000" />  <!-- 表示当borrow一个jedis实例时，最大的等待时间，如果超过等待时间，则直接抛出JedisConnectionException -->  
	    <property name="testOnBorrow" value="true" /> <!-- 在borrow一个jedis实例时，是否提前进行validate操作；如果为true，则得到的jedis实例均是可用的 -->  
	</bean>
    
    
    <!-- Spring线程池 -->
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="10" />
		<property name="queueCapacity" value="25" />
	</bean>
	
	<!-- Spring 定时任务 enables scanning for @Task annotations-->
	<task:annotation-driven executor="taskExecutor" />
	<task:scheduler id="scheduler" pool-size="10" />
	<task:executor id="threadPoolTaskExecutor" pool-size="10" />
	<task:executor id="executorWithPoolSizeRange" pool-size="5-25" queue-capacity="100" />

</beans>